##### 2019.03.04    23:04

​	在中午刚配置好一个react-native的初始项目，到了晚上再进行调试就发现了如下错误

<img src="./img/1.png">

​	期初查了文章说是端口被占用，将占用端口的停了就好，后面发现是adb版本不一致的问题。虽然很奇怪，但是不知道为什么，也不知道从什么时候开始我在环境中的adb和sdk中的adb版本变得不一样了。在一篇文章上看到的

<img src="./img/2.png">

​	虽然上述的是Linux系统，但是我的情况和它一致，也是两个地方的adb版本不一致。Linux的环境是处于 **/usr/local/bin**中的 ，而Windows我苦思冥想找不到环境path在哪里，于是在windows的文档系统里搜索adb，看见在C:/windows下的adb我恍然大悟。windows下的path正是处于该路径下。

​	接下来就是把sdk中的adb.exe复制到C:/windows路径下了。

**整个过程耗时3个小时。  debug  不愧是程序员的痛点啊。**



---

#### 2019.3.17  周日

在写Controller模块，遇到了一个问题，那就是User表中的Id是自增的，我在犹豫是否要在参数中加入Id，查了资料感觉没什么用。于是就直接用postman试了一下，发现不加id也是可以的。会由hibernate自动生成的表 hibernate_sequence 中的值决定下一个id是多少，

<img src="./img/3.png">

如上图中下一个id的值是6，就是这样。如果表中已经有值，id和next_val冲突就会报错，因为primary_key只能有一个值不能重复。

关于Hibernate的自增主键管理，这个项目只有两个自增主键。可是它们并不是分别自增，而是共享一个值，那个值就是之前图中的next_val，即使修改了三行next_val中的另外两行也是如此。

<img src="./img/7.png"><img src="./img/6.png">

不过这不是什么大问题，只是有点奇怪罢了。之后有时间再琢磨吧。

#### 还有关于Cookie和Session的问题：

我想搞清楚这个的原理还是很重要的。下面一段参考自[Session原理](https://www.jianshu.com/p/2b7c10291aad)

##### 无状态的 HTTP 协议

还记得每当入门一门 Web 端语言的进行服务器端开发的时候，仅次于「Hello World」的 demo 就是「登录功能」了。实现登录功能很简单，验证客户端发送过来的账户和密码，如果通过验证就把用户塞进 session 中，然后在后续的访问中，只需检测 session 是否有这个用户就能知道用户是否登录了。Session 的中文翻译为：「会话」，只属于某一个客户端和某一个服务器端沟通的工具。但，计算机网络老师又说了，HTTP 协议是无状态的，怎么能记录用户的登录状态呢？
 鉴于 HTTP 是无状态协议，之前已认证成功的用户状态是无法通过协议层面保存下来的，既，无法实现状态管理，因此即使当该用户下一次继续访问，也无法区分他和其他的用户。于是我们会使用 Cookie 来管理 Session，以弥补 HTTP 协议中不存在的状态管理功能。

##### 利用 Cookie 管理 Session

<img src="./img/4.png">

而且关于Cookie和Session ，SpringBoot会有专门的模块处理的，后面具体的操作就不赘述了。



---

##### 2019-3.18

本来打算前两天就结束这个后台的0.2版本，可是开发过程并没有想象中的那么顺利。今天又是遇到了新的东西，就是接口文档，接口文档实际上并不好写，要把之前存在于想象中的数据格式具体化到json中，实际上是要花一点时间的，而且还要各种微调。以及把数据库中的一个多值依赖的表分成了两个，这样前面有工作没做完，又有新的东西加进来感觉整个人都有点混乱，所以在犹豫是否要熬个夜，把工作赶掉，明天去华科参加京东的实习招聘——去的话，回来就要打的。

开始正经的记笔记啦！

用postman测试接口的时候发现关于删除数据的操作需要加`@Transactional`注解，不然会报错。

写到ReadController时，想到需要有人写书，不过在手机上不好写，想着还是给出网页版的链接地址，到电脑上写吧。

总结：今天的工作完成了大约一半左右，难受，明天继续努力。